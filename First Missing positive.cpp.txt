class Solution {
public:
    int firstMissingPositive(vector<int>& a) {
        int f=0;
        int n=a.size();
        if(n==1&&a[0]==1)
            return 2; //corner case
        for(int i=0;i<n;i++){
            if(a[i]!=1)
                continue;
        else
        {  f=1;
            break;}}
        if(f==0)return 1;
        for(int i=0;i<n;i++)
            if(a[i]<=0||a[i]>n)
                a[i]=1;
        
        for(int i=0;i<n;i++)
             cout<<a[i];
        cout<<endl;
        for(int i=0;i<n;i++){
            if(abs(a[i])==n)
                a[0]=-1*a[0];
            if(abs(a[i])>=0&&abs(a[i])<n&&a[abs(a[i])]>0)
                a[abs(a[i])]*=-1;}
         for(int i=0;i<n;i++)
             cout<<a[i];
        
        
        
        for(int i=1;i<n;i++)
            if(a[i]>0)
                return i;//return the missing first positive numbers
      if(a[0]>0)
          return n;//base cases
        return n+1;//if we cant find any missing positive no.
      
        
    }
};
